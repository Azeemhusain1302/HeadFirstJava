//Clock Problem Solution

public class Clock {

    String time;

    public String getTime() {
        return time;
    }

    public void setTime(String time) {
        this.time = time;
    }
}

//ClockTestDrive

public class ClockTestDrive {

    public static void main(String[] args) {

        Clock clock = new Clock();

        clock.setTime("1245");
        String time = clock.getTime();
        System.out.print("Time: " + time);
    }
}

//Dog Problem Solution

public class Dog {

    int size;
    String name;

    void bark() {
        if (size > 60) {
            System.out.println("Woof! Woof!");
        } else if (size > 14) {
            System.out.println("Ruff! Ruff!");
        } else {
            System.out.println("Yip! Yip!");
        }
    }
}
// DogTestDrive

public class DogTestDrive {

    public static void main(String[] args) {
        Dog one = new Dog();
        one.size = 70;
        Dog two = new Dog();
        two.size = 8;
        Dog three = new Dog();
        three.size = 35;

        one.bark();
        two.bark();
        three.bark();
    }
}
// PuzzelFourSolution
public class PuzzleFour {

    int ivar;

    public int doStuff(int factor) {
        if (ivar > 100) {
            return ivar * factor;
        } else {
            return ivar * (5 - factor);
        }
    }
}

//PuzzelFourTestDrive

public class PuzzleFourTestDrive {

    public static void main(String[] args) {
        PuzzleFour[] puzzleFours = new PuzzleFour[6];
        int y = 1;
        int x = 0;
        int result = 0;

        while (x < 6) {
            puzzleFours[x] = new PuzzleFour();
            puzzleFours[x].ivar = y;
            y = y * 10;
            x = x + 1;
        }

        x = 6;

        while (x > 0) {
            x = x - 1;
            result = result + puzzleFours[x].doStuff(x);
        }

        System.out.println("Result: " + result);
    }
}

//XCopy Solution
public class XCopy {

    public static void main(String[] args) {
        int orig = 42;
        XCopy xCopy = new XCopy();
        int y = xCopy.go(orig);
        System.out.println(orig + " " + y);
    }

    int go(int arg) {
        arg = arg * 2;
        return arg;
    }
}

